<% depositor = f.object.depositor || batch.generic_files.first.depositor %>
<% public_perm = f.object.permissions.map { |perm| perm.access if perm.agent_name == "public"}.compact.first %>
<% # public_perm = true if params[:controller] == 'batch' %>
<% registered_perm = f.object.permissions.map { |perm| perm.access if perm.agent_name == "registered"}.compact.first %>

<h2><% if params[:controller] == 'batch' %>Bulk <% end %>Permissions <% if params[:controller] == 'batch' %>
      <small>(applied to all files just uploaded)</small><% end %>
</h2>

<div class="alert alert-info hidden" id="save_perm_note">Permissions are <strong>not</strong> saved until the &quot;Save&quot; button is pressed at the bottom of the page.</div>
<div class="alert alert-warning hidden" id="permissions_error">
  <a class="close" data-dismiss="alert" href="#">
    <span class="sr-only">Close this alert</span>
    <span aria-hidden="true">Ã—</span>
  </a>
<span id="permissions_error_text"></span></div>

<div class="well">

  <h3>Visibility - <small>who should have the ability to read and download</small>
    <span id="visibility_tooltip" class="h5"><%= visibility_help %></span>
  </h3>
  <% if params[:controller].start_with? 'batch' %>
  <p>
    Visibility changes may have restrictions based on the current visibility of
    each document. If the documents have different visibilities to start with,
    your changes might only get applied to some of the documents and not to others.
  </p>
  <% end %>
  <div class="radio">
    <%
      open_pending = (f.object.respond_to? :open_access_pending?) ?
                        f.object.open_access_pending? :
                        false
      visibility_options=[
        { id: 'visibility_open',
          value: Hydra::AccessControls::AccessRight::VISIBILITY_TEXT_VALUE_PUBLIC,
          checked: !public_perm.blank? && (!params[:controller].start_with? 'batch'),
          label_class: 'label-success',
          label: t('sufia.visibility.open'),
          label_info: 'Visible to the world.'
        },
        { id: 'visibility_open_pending',
          value: 'open-pending',
          checked: open_pending && (!params[:controller].start_with? 'batch'),
          label_class: 'label-success',
          label: t('sufia.visibility.open_pending'),
          label_info: 'Visible to the world, pending review.'
        },
        { id: 'visibility_psu',
          value: Hydra::AccessControls::AccessRight::VISIBILITY_TEXT_VALUE_AUTHENTICATED,
          checked: public_perm.blank? && !registered_perm.blank? && !open_pending && (!params[:controller].start_with? 'batch') ,
          label_class: 'label-info',
          label: t('sufia.institution_name'),
          label_info: "Visible to all #{t('sufia.institution_name')} users"
        },
        { id: 'visibility_open',
          value: Hydra::AccessControls::AccessRight::VISIBILITY_TEXT_VALUE_PRIVATE,
          checked: registered_perm.blank? && public_perm.blank? && !open_pending && (!params[:controller].start_with? 'batch') ,
          label_class: 'label-danger',
          label: t('sufia.visibility.private'),
          label_info: 'Visible to users specified below, if any.'
        },
      ]

      visibility_options.each do |opts|
        disabled = begin
          if (params[:controller].start_with? 'batch')
            false
          elsif f.object.respond_to? :can_change_visibility?
            !(f.object.can_change_visibility? opts[:value], @current_user)
          else
            !(f.object.model.can_change_visibility? opts[:value], @current_user)
          end
        end
        %>
          <label <%= 'class="disabled"' if disabled %> >
            <input type="radio" id="<%= opts[:id] %>" name="visibility"
              value="<%= opts[:value] %>"
              <%= 'checked="true"' if opts[:checked] %>
              <%= 'disabled="true"' if disabled %> />
            <span class="label <%= opts[:label_class] %>"><%= opts[:label] %></span> <%= opts[:label_info] %>
          </label>
        <%
      end
    %>
  </div>
  <div>
    <% if (f.object.respond_to? :open_access?) && f.object.open_access? %>
      <p>
      If you need to request that this item is withdrawn from open access,
      please contact the system administrators giving the reasons for the
      request. Withdrawing the item from open access cannot prevent its use by
      people who have already obtained a copy of the item.
      <p>
    <% else %>
      <p>
      Items need to go through a review process before they can be made publicly
      visible. You can select the option <strong>Open access pending</strong> to
      indicate that you wish to change the visibility to Open access. A notification
      will be sent to a reviewer who will then review your request and on approval
      change the visibility to be fully Open Access. While in the pending state,
      the document will be visible to all <%= t('sufia.institution_name') %> users
      but not to anyone else.
      </p>
      <p>
      Note that items that have been made Open Access cannot be freely changed
      back to a more restricted visibility.
      </p>
    <% end %>
  </div>

  <!-- Share With -->
  <div class="row">
    <h3 class="col-sm-12">Share With <small>(optional)</small>
      <span id="share_with_tooltip" class="h5"><%= share_with_help %></span>
    </h3>
  </div>

  <div class="form-group row">
    <div id="new-user">
      <p class="col-sm-12">Enter <%=t('sufia.account_label') %> (one at a time)</p>
      <p class="sr-only">Use the add button to give access to one <%=t('sufia.account_label') %> at a time (it will be added to the list below).  Select the user, by name or <%=t('sufia.account_label') %>. Then select the access level you wish to grant and click on Add this <%= t('sufia.account_label') %> to complete adding the permission.</p>
      <div class="col-sm-5">
        <label for="new_user_name_skel" class="sr-only"><%= t('sufia.account_label') %> (without the <%= t('sufia.directory.suffix') %> part)</label>
        <%= text_field_tag 'new_user_name_skel', nil %>
      </div>
      <div class="col-sm-4">
        <label for="new_user_permission_skel" class="sr-only">Access type to grant</label>
        <%= select_tag 'new_user_permission_skel', options_for_select(Sufia.config.permission_levels), class: 'form-control' %>
      </div>
      <div class="col-sm-3">
        <button class="btn btn-mini btn-inverse" id="add_new_user_skel">
          <span class="sr-only">Add this <%= t('sufia.account_label') %></span>
          <span aria-hidden="true"><i class="glyphicon glyphicon-plus"></i></span>
        </button>
        <br /> <span id="directory_user_result"></span>
      </div>
    </div>
  </div>

</div><!-- /.well -->

<table class="table table-bordered">
  <tr>
    <th width="60%">Person</th>
    <th width="40%">Access Level</th>
  </tr>
  <tr id="file_permissions">
    <td>
      <%= label_tag :owner_access, class: "control-label" do %>
        Depositor (<span id="file_owner" data-depositor="<%= depositor %>"><%= link_to_profile depositor %></span>)
      <% end %>
    </td>
    <td>
      <%= Sufia.config.owner_permission_levels.keys[0] %>
    </td>
  </tr>
  <%= f.fields_for :permissions do |permission_fields| %>
    <%# skip the public, penn state (aka registered), and depositor perms as they are displayed first at the top %>
    <% next if ['public', 'registered', depositor].include? permission_fields.object.agent_name.downcase %>
    <tr>
      <td><%= permission_fields.label :agent_name, class: "control-label" do %>
        <%= user_display_name_and_key(permission_fields.object.agent_name) %>
      <% end %></td>
      <td>
        <div class="col-sm-8">
          <%= permission_fields.select :access, Sufia.config.permission_levels, {}, class: 'form-control select_perm' %>
        </div>
        <button class="btn close remove_perm" data-index="<%= permission_fields.index %>">X</button>
      </td>
    </tr>
  <% end %>
</table>
